digraph "Program Dependency Graph for 'test' function" {
	label="Program Dependency Graph for 'test' function";

	Node0x37c3ac0 [shape=record,label="{  %c = alloca i32, align 4}"];
	Node0x37c3ac0 -> Node0x37c42b0[style=dotted,label = "{DEF_USE}" ];
	Node0x37c42b0 [shape=record,label="{  store i32 1, i32* %c, align 4, !dbg !29}"];
	Node0x37c4320 [shape=record,label="{  %d = alloca i32, align 4}"];
	Node0x37c4320 -> Node0x37c43c0[style=dotted,label = "{DEF_USE}" ];
	Node0x37c43c0 [shape=record,label="{  store i32 2, i32* %d, align 4, !dbg !32}"];
	Node0x37c4430 [shape=record,label="{  %key = alloca i32, align 4}"];
	Node0x37c4430 -> Node0x37c4390[style=dotted,label = "{DEF_USE}" ];
	Node0x37c4430 -> Node0x37c44e0[style=dotted,label = "{DEF_USE}" ];
	Node0x37c4390 [shape=record,label="{  %key1 = bitcast i32* %key to i8*, !dbg !25}"];
	Node0x37c4390 -> Node0x37c4580[style=dotted,label = "{DEF_USE}" ];
	Node0x37c44e0 [shape=record,label="{  %0 = load i32* %key, align 4, !dbg !26}"];
	Node0x37c44e0 -> Node0x37c45f0[style=dotted,label = "{DEF_USE}" ];
	Node0x37c4580 [shape=record,label="{  call void @llvm.var.annotation(i8* %key1, i8* getelementptr inbounds ([10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i32 0, i32 0), i32 4), !dbg !25}"];
	Node0x37c45f0 [shape=record,label="{  store i32 %0, i32* %a, align 4, !dbg !26}"];
	Node0x37c45f0 -> Node0x37c4710[style=dotted,label = "{RAW} a"];
	Node0x37c4710 [shape=record,label="{  %1 = load i32* %a, align 4, !dbg !27}"];
	Node0x37c4710 -> Node0x37c47a0[style=dotted,label = "{DEF_USE}" ];
	Node0x37c47a0 [shape=record,label="{  %tobool = icmp ne i32 %1, 0, !dbg !27}"];
	Node0x37c47a0 -> Node0x37c48f0[style=dotted,label = "{DEF_USE}" ];
	Node0x37c4830 [shape=record,label="{  %a = alloca i32, align 4}"];
	Node0x37c4830 -> Node0x37c45f0[style=dotted,label = "{DEF_USE}" ];
	Node0x37c4830 -> Node0x37c4710[style=dotted,label = "{DEF_USE}" ];
	Node0x37c48f0 [shape=record,label="{  br i1 %tobool, label %if.then, label %if.else, !dbg !27}"];
	Node0x37c48f0 -> Node0x37c42b0;
	Node0x37c48f0 -> Node0x37c4980;
	Node0x37c48f0 -> Node0x37c43c0;
	Node0x37c48f0 -> Node0x37c49f0;
	Node0x37c4980 [shape=record,label="{  br label %if.end, !dbg !31}"];
	Node0x37c49f0 [shape=record,label="{  br label %if.end}"];
	Node0x37c4a60 [shape=record,label="{\<\<ENTRY\>\> test}"];
	Node0x37c4a60 -> Node0x37c3ac0;
	Node0x37c4a60 -> Node0x37c4320;
	Node0x37c4a60 -> Node0x37c4430;
	Node0x37c4a60 -> Node0x37c4ad0;
	Node0x37c4a60 -> Node0x37c4660;
	Node0x37c4a60 -> Node0x37c4d30;
	Node0x37c4a60 -> Node0x37c4da0;
	Node0x37c4a60 -> Node0x37c4e10;
	Node0x37c4a60 -> Node0x37c4390;
	Node0x37c4a60 -> Node0x37c4580;
	Node0x37c4a60 -> Node0x37c44e0;
	Node0x37c4a60 -> Node0x37c45f0;
	Node0x37c4a60 -> Node0x37c4710;
	Node0x37c4a60 -> Node0x37c4830;
	Node0x37c4a60 -> Node0x37c4ca0;
	Node0x37c4a60 -> Node0x37c47a0;
	Node0x37c4a60 -> Node0x37c48f0;
	Node0x37c4a60 -> Node0x37c4e80;
	Node0x37c4ad0 [shape=record,label="{  call void @llvm.dbg.declare(metadata !\{i32* %a\}, metadata !15), !dbg !16}"];
	Node0x37c4660 [shape=record,label="{  call void @llvm.dbg.declare(metadata !\{i32* %b\}, metadata !17), !dbg !18}"];
	Node0x37c4d30 [shape=record,label="{  call void @llvm.dbg.declare(metadata !\{i32* %c\}, metadata !19), !dbg !20}"];
	Node0x37c4da0 [shape=record,label="{  call void @llvm.dbg.declare(metadata !\{i32* %d\}, metadata !21), !dbg !22}"];
	Node0x37c4e10 [shape=record,label="{  call void @llvm.dbg.declare(metadata !\{i32* %key\}, metadata !23), !dbg !24}"];
	Node0x37c4ca0 [shape=record,label="{  %b = alloca i32, align 4}"];
	Node0x37c4e80 [shape=record,label="{  ret void, !dbg !34}"];
	Node0x37cdcd0 [shape=record,label="{  %b = alloca i32, align 4}"];
	Node0x37cdcd0 -> Node0x37ce430[style=dotted,label = "{DEF_USE}" ];
	Node0x37cdcd0 -> Node0x37ce4a0[style=dotted,label = "{DEF_USE}" ];
	Node0x37cdcd0 -> Node0x37ce540[style=dotted,label = "{DEF_USE}" ];
	Node0x37ce430 [shape=record,label="{  store i32 3, i32* %b, align 4, !dbg !31}"];
	Node0x37ce4a0 [shape=record,label="{  store i32 3, i32* %b, align 4, !dbg !41}"];
	Node0x37ce540 [shape=record,label="{  store i32 4, i32* %b, align 4, !dbg !45}"];
	Node0x37ce510 [shape=record,label="{  %c = alloca i32, align 4}"];
	Node0x37ce510 -> Node0x37ce640[style=dotted,label = "{DEF_USE}" ];
	Node0x37ce510 -> Node0x37ce6b0[style=dotted,label = "{DEF_USE}" ];
	Node0x37ce640 [shape=record,label="{  store i32 4, i32* %c, align 4, !dbg !33}"];
	Node0x37ce6b0 [shape=record,label="{  store i32 5, i32* %c, align 4, !dbg !48}"];
	Node0x37ce750 [shape=record,label="{  %d = alloca i32, align 4}"];
	Node0x37ce750 -> Node0x37ce7c0[style=dotted,label = "{DEF_USE}" ];
	Node0x37ce7c0 [shape=record,label="{  store i32 5, i32* %d, align 4, !dbg !35}"];
	Node0x37ce830 [shape=record,label="{  %key2 = alloca i32, align 4}"];
	Node0x37ce830 -> Node0x37c4b90[style=dotted,label = "{DEF_USE}" ];
	Node0x37ce830 -> Node0x37c4c00[style=dotted,label = "{DEF_USE}" ];
	Node0x37c4b90 [shape=record,label="{  %key21 = bitcast i32* %key2 to i8*, !dbg !25}"];
	Node0x37c4b90 -> Node0x37ceb90[style=dotted,label = "{DEF_USE}" ];
	Node0x37c4c00 [shape=record,label="{  %1 = load i32* %key2, align 4, !dbg !36}"];
	Node0x37c4c00 -> Node0x37cf2f0[style=dotted,label = "{DEF_USE}" ];
	Node0x37ceab0 [shape=record,label="{  store i32 0, i32* %retval}"];
	Node0x37ceab0 -> Node0x37ceb20[style=dotted,label = "{RAW} retval"];
	Node0x37ceb20 [shape=record,label="{  %3 = load i32* %retval, !dbg !50}"];
	Node0x37ceb20 -> Node0x37cf780[style=dotted,label = "{DEF_USE}" ];
	Node0x37ceb90 [shape=record,label="{  call void @llvm.var.annotation(i8* %key21, i8* getelementptr inbounds ([10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i32 0, i32 0), i32 22), !dbg !25}"];
	Node0x37cec00 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x37cec00 -> Node0x37ceab0[style=dotted,label = "{DEF_USE}" ];
	Node0x37cec00 -> Node0x37ceb20[style=dotted,label = "{DEF_USE}" ];
	Node0x37ceca0 [shape=record,label="{  %a = alloca i32, align 4}"];
	Node0x37ceca0 -> Node0x37ced10[style=dotted,label = "{DEF_USE}" ];
	Node0x37ceca0 -> Node0x37ced80[style=dotted,label = "{DEF_USE}" ];
	Node0x37ceca0 -> Node0x37cee20[style=dotted,label = "{DEF_USE}" ];
	Node0x37ceca0 -> Node0x37cedf0[style=dotted,label = "{DEF_USE}" ];
	Node0x37ced10 [shape=record,label="{  %0 = load i32* %a, align 4, !dbg !27}"];
	Node0x37ced10 -> Node0x37ceff0[style=dotted,label = "{DEF_USE}" ];
	Node0x37ced80 [shape=record,label="{  store i32 2, i32* %a, align 4, !dbg !29}"];
	Node0x37ced80 -> Node0x37ced10[style=dotted,label = "{RAW} a"];
	Node0x37cee20 [shape=record,label="{  store i32 2, i32* %a, align 4, !dbg !38}"];
	Node0x37cee20 -> Node0x37cedf0[style=dotted,label = "{RAW} a"];
	Node0x37cedf0 [shape=record,label="{  %2 = load i32* %a, align 4, !dbg !43}"];
	Node0x37cedf0 -> Node0x37cf510[style=dotted,label = "{DEF_USE}" ];
	Node0x37cef60 [shape=record,label="{  call void @test(), !dbg !26}"];
	Node0x37cef60 -> Node0x37c4a60[style=dotted];
	Node0x37ceff0 [shape=record,label="{  %tobool = icmp ne i32 %0, 0, !dbg !27}"];
	Node0x37ceff0 -> Node0x37cf080[style=dotted,label = "{DEF_USE}" ];
	Node0x37cf080 [shape=record,label="{  br i1 %tobool, label %if.then, label %if.else, !dbg !27}"];
	Node0x37cf080 -> Node0x37ced80;
	Node0x37cf080 -> Node0x37ce430;
	Node0x37cf080 -> Node0x37cf160;
	Node0x37cf080 -> Node0x37ce640;
	Node0x37cf080 -> Node0x37ce7c0;
	Node0x37cf080 -> Node0x37cf130;
	Node0x37cf160 [shape=record,label="{  br label %if.end, !dbg !32}"];
	Node0x37cf130 [shape=record,label="{  br label %if.end}"];
	Node0x37cf2f0 [shape=record,label="{  %tobool2 = icmp ne i32 %1, 0, !dbg !36}"];
	Node0x37cf2f0 -> Node0x37cf380[style=dotted,label = "{DEF_USE}" ];
	Node0x37cf380 [shape=record,label="{  br i1 %tobool2, label %if.then3, label %if.else4, !dbg !36}"];
	Node0x37cf380 -> Node0x37cee20;
	Node0x37cf380 -> Node0x37cf430;
	Node0x37cf380 -> Node0x37ce4a0;
	Node0x37cf380 -> Node0x37cf4a0;
	Node0x37cf430 [shape=record,label="{  br label %if.end5, !dbg !40}"];
	Node0x37cf4a0 [shape=record,label="{  br label %if.end5}"];
	Node0x37cf510 [shape=record,label="{  %tobool6 = icmp ne i32 %2, 0, !dbg !43}"];
	Node0x37cf510 -> Node0x37cf5a0[style=dotted,label = "{DEF_USE}" ];
	Node0x37cf5a0 [shape=record,label="{  br i1 %tobool6, label %if.then7, label %if.else8, !dbg !43}"];
	Node0x37cf5a0 -> Node0x37ce540;
	Node0x37cf5a0 -> Node0x37cf650;
	Node0x37cf5a0 -> Node0x37ce6b0;
	Node0x37cf5a0 -> Node0x37cf6c0;
	Node0x37cf650 [shape=record,label="{  br label %if.end9, !dbg !47}"];
	Node0x37cf6c0 [shape=record,label="{  br label %if.end9}"];
	Node0x37cf780 [shape=record,label="{  ret i32 %3, !dbg !50}"];
	Node0x37cf7f0 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x37cf7f0 -> Node0x37cdcd0;
	Node0x37cf7f0 -> Node0x37ce510;
	Node0x37cf7f0 -> Node0x37ce750;
	Node0x37cf7f0 -> Node0x37ce830;
	Node0x37cf7f0 -> Node0x37ceab0;
	Node0x37cf7f0 -> Node0x37cf880;
	Node0x37cf7f0 -> Node0x37cf9d0;
	Node0x37cf7f0 -> Node0x37cfa40;
	Node0x37cf7f0 -> Node0x37cfab0;
	Node0x37cf7f0 -> Node0x37cf900;
	Node0x37cf7f0 -> Node0x37c4b90;
	Node0x37cf7f0 -> Node0x37ceb90;
	Node0x37cf7f0 -> Node0x37cec00;
	Node0x37cf7f0 -> Node0x37ceca0;
	Node0x37cf7f0 -> Node0x37cef60;
	Node0x37cf7f0 -> Node0x37ced10;
	Node0x37cf7f0 -> Node0x37ceff0;
	Node0x37cf7f0 -> Node0x37cf080;
	Node0x37cf7f0 -> Node0x37c4c00;
	Node0x37cf7f0 -> Node0x37cf2f0;
	Node0x37cf7f0 -> Node0x37cf380;
	Node0x37cf7f0 -> Node0x37cedf0;
	Node0x37cf7f0 -> Node0x37cf510;
	Node0x37cf7f0 -> Node0x37cf5a0;
	Node0x37cf7f0 -> Node0x37ceb20;
	Node0x37cf7f0 -> Node0x37cf780;
	Node0x37cf880 [shape=record,label="{  call void @llvm.dbg.declare(metadata !\{i32* %a\}, metadata !15), !dbg !16}"];
	Node0x37cf9d0 [shape=record,label="{  call void @llvm.dbg.declare(metadata !\{i32* %b\}, metadata !17), !dbg !18}"];
	Node0x37cfa40 [shape=record,label="{  call void @llvm.dbg.declare(metadata !\{i32* %c\}, metadata !19), !dbg !20}"];
	Node0x37cfab0 [shape=record,label="{  call void @llvm.dbg.declare(metadata !\{i32* %d\}, metadata !21), !dbg !22}"];
	Node0x37cf900 [shape=record,label="{  call void @llvm.dbg.declare(metadata !\{i32* %key2\}, metadata !23), !dbg !24}"];
}
